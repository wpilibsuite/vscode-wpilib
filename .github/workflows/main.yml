name: CI

on: [pull_request, push]

jobs:
  build-vsix:
    name: Build - VSIX
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
      - run: ./gradlew build updateVersions -PbuildServer
        name: Build with Gradle
      - run: |
          npm install
          npm run lint
          npm run unittest
          npm run gulp
          npm run webpack
          npm run vscePackage
        working-directory: vscode-wpilib
        name: Build VSIX
      - uses: actions/upload-artifact@v4
        with:
          name: VSIX
          path: ${{ github.workspace }}/**/*.vsix
      - uses: actions/upload-artifact@v4
        with:
          name: Distributions
          path: ${{ github.workspace }}/build/distributions/*

  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Run Prettier
        run: npx prettier -w .
        working-directory: vscode-wpilib
      - name: Check output
        run: git --no-pager diff --exit-code HEAD
      - name: Generate diff
        run: git diff HEAD > format-fixes.patch
        if: ${{ failure() }}
      - uses: actions/upload-artifact@v4
        with:
          name: format fixes
          path: format-fixes.patch
        if: ${{ failure() }}
      - name: Write to job summary
        run: |
          echo '```diff' >> $GITHUB_STEP_SUMMARY
          cat format-fixes.patch >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        if: ${{ failure() }}

  release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: [build-vsix]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        name: Download Artifacts
        with:
          path: artifacts
      - uses: softprops/action-gh-release@v2
        name: Release
        with:
          body_path: ${{ github.workspace }}/.github/ReleaseBody.txt
          prerelease: true
          files: "artifacts/**/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
